<#@ template language="C#v3.5" debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#
    List<List<string>> XML1 = get_xml("First.xml");
    foreach (Element library1 in needed_elements("library", XML1))
    {
#>
using <#= library1.text#>;
<#
    }
    foreach (Element second_file in needed_elements("secondfile", XML1))
    {
        List<List<string>> XML2 = get_xml(second_file.text);
        Element name = needed_element("namespace", XML2);
#>

namespace <#= name.text#>
{
<#
        Element access = needed_element("access", XML2);
        Element classname = needed_element("classname", XML2);
#>
    <#= access.text#> class <#= classname.text#>
    {
<#
        foreach (Element litera in needed_elements("litera", XML2))
        {
            string script = needed_element("script", XML1, litera.id).text;
            string[] script_strings = script.Split('\n');
            foreach (string script_string in script_strings)
            {
                string new_script_string = "";
                if (script_string.Contains("???x???"))
                {
                    string new_script = script_string.Replace("???x???", litera.text);
                    new_script_string = new_script.Remove(new_script.Length - 1);
                }
                else
                {
                    new_script_string = "// " + script_string + "\n";
                }
#>
        <#= new_script_string#>
<#        
            }
#>
<#
        }
#>
    }
}
<#
    }
#>
<#+
    public class Element
    {
        public string text;
        public string tag;
        public string id;

        public Element()
        { }

        public Element(List<string> list)
        {
            this.text = list[1];
            this.tag = list[0];
            if (list.Count > 2)
                this.id = list[2];
        }
    }
    static List<List<string>> get_xml(string title)
    {
        List<List<string>> result = new List<List<string>>();
        XmlDocument doc = new XmlDocument();
        string absolutepath = Path.GetFullPath(title);
        doc.Load(absolutepath);
        foreach (XmlNode node in doc.SelectNodes("/file/element"))
        {
            List<string> node_content;
            if (node.Attributes[0].Value == "litera" || node.Attributes[0].Value == "script")
                node_content = new List<string>() { node.Attributes[0].Value, node.InnerText, node.Attributes[1].Value };
            else
                node_content = new List<string>() { node.Attributes[0].Value, node.InnerText};

            result.Add(node_content);
        }
        return result;
    }

    static List<Element> needed_elements(string key, List<List<string>> nodes)
        {
            List<Element> result = new List<Element>();
            foreach (List<string> node in nodes)
            {
                if (node[0] == key)
                {
                    Element elem = new Element(node);
                    result.Add(elem);
                }
            }
            return result;
        }

        static Element needed_element(string key, List<List<string>> nodes)
        {
            Element result = new Element();
            foreach (List<string> node in nodes)
            {
                if (node[0] == key)
                    result = new Element(node);
            }
            return result;
        }

        static Element needed_element(string key, List<List<string>> nodes, string id)
        {
            Element result = new Element();
            foreach (List<string> node in nodes)
            {
                if (node[0] == key && node[2] == id)
                    result = new Element(node);
            }
            return result;
        }
#>